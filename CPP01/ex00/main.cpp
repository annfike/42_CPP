#include "Zombie.hpp"

int	main()
{
    Zombie zombie = Zombie("Zombie0"); //stack
	zombie.announce();
    
	Zombie *zombie1 = newZombie("Zombie1"); //heap
    zombie1->announce();
    delete zombie1;
    
    randomChump("Zombie2"); //stack
    
	return (0);
}

/*
В C++ выбор между выделением экземпляра класса на стеке или в куче (хипе) зависит от нескольких факторов. Давайте рассмотрим основные случаи, когда лучше использовать каждый из этих подходов.
Выделение на стеке

Преимущества:
Автоматическое управление памятью: Объекты, выделенные на стеке, автоматически уничтожаются, когда выходят из области видимости. Это упрощает управление памятью и снижает риск утечек памяти.
Быстродействие: Выделение памяти на стеке обычно быстрее, чем в куче, так как стек управляется более эффективно.
Простота: Для небольших объектов, которые не требуют длительного времени жизни, стек является более простым и безопасным вариантом.
Когда использовать:
Когда объект имеет короткий срок жизни и не нужно передавать его за пределы функции.
Когда размер объекта известен на этапе компиляции и не слишком велик.
Выделение в куче

Преимущества:
Гибкость: Объекты, выделенные в куче, могут существовать дольше, чем область видимости функции, в которой они были созданы. Это полезно, если объект должен передаваться между функциями или храниться в контейнерах.
Большие объекты: Если объект слишком велик для стека (например, массивы или сложные структуры), лучше выделить его в куче, чтобы избежать переполнения стека.
Динамическое управление памятью: Вы можете выделять и освобождать память по мере необходимости, что позволяет более эффективно использовать ресурсы.
Когда использовать:
Когда объект должен существовать вне области видимости функции, в которой он был создан.
Когда размер объекта неизвестен на этапе компиляции или может изменяться во время выполнения программы.
*/