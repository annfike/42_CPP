#include "Zombie.hpp"

Zombie *newZombie( std::string name )
{
    Zombie *zombie = new Zombie(name);
    return (zombie);
}

Zombie* zombieHorde( int N, std::string name )
{
    std::stringstream ss;
    Zombie *zombie = new Zombie[N];
    for (int i = 0; i < N; i++)
    {
        ss << i;
        zombie[i].setName(name + ss.str());
        ss.str("");
        ss.clear();
    }
        
    return (zombie);
}

/*
std::stringstream ss; используется в данном коде для создания строкового потока, 
который позволяет удобно формировать строки. 
В частности, в функции zombieHorde этот поток используется для добавления индекса к базовому имени зомби.
Зачем он нужен:

Формирование строк: С помощью stringstream можно легко комбинировать строки и другие типы данных 
(например, целые числа). В данном случае, индекс i добавляется к имени зомби, 
чтобы создать уникальное имя для каждого экземпляра.
Удобство: Использование stringstream позволяет избежать необходимости конкатенации строк вручную, 
что может быть менее эффективно и более подвержено ошибкам.
Очистка и сброс: После использования stringstream можно легко очищать его содержимое с помощью ss.str("") 
и сбрасывать состояние с помощью ss.clear(), что делает его многоразовым инструментом для формирования строк в цикле.
Таким образом, std::stringstream упрощает процесс создания уникальных имен для зомби, делая код более читаемым и удобным.
*/